{"version":3,"sources":["context/GlobalContext.js","components/NavBar/NavBar.js","containers/IndexContainer/IndexContainer.js","context/ThemeContext.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalContext","createContext","NavBar","useContext","handleTheme","theme","className","to","activeClassName","onClick","Dropdown","Toggle","variant","id","Menu","Item","Divider","IndexContainer","ThemeContext","children","useState","setTheme","Provider","value","props","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAIeA,EAFOC,0B,OCsDPC,EAjDA,WAAO,IAAD,EACYC,qBAAWH,GAAlCI,EADW,EACXA,YAAaC,EADF,EACEA,MAErB,OACE,mCACE,sBAAKC,UAAW,iBAAmBD,EAAQ,aAA3C,UACE,cAAC,IAAD,CAASE,GAAI,IAAKD,UAAW,mBAAqBD,EAAOG,gBAAiB,MAA1E,oBAGA,cAAC,IAAD,CAASD,GAAI,SAAUC,gBAAiB,MAAOF,UAAW,mBAAqBD,EAA/E,mBAGA,cAAC,IAAD,CAASE,GAAI,SAAUC,gBAAiB,MAAOF,UAAW,mBAAqBD,EAA/E,mBAGA,cAAC,IAAD,CAASE,GAAI,SAAUC,gBAAiB,MAAOF,UAAW,mBAAqBD,EAA/E,mBAGA,cAAC,IAAD,CAASE,GAAI,SAAUC,gBAAiB,MAAOF,UAAW,mBAAqBD,EAA/E,mBAGA,sBAAMC,UAAW,iBAAkBG,QAAS,kBAAML,EAAY,WAA9D,0BACA,sBAAME,UAAW,gBAAiBG,QAAS,kBAAML,EAAY,UAA7D,yBACA,sBAAME,UAAW,eAAgBG,QAAS,kBAAML,EAAY,SAA5D,2BAEF,yBAAQE,UAAW,iBAAmBD,EAAQ,YAA9C,UACA,cAAC,IAAD,CAASE,GAAI,IAAKD,UAAW,mBAAqBD,EAAOG,gBAAiB,MAA1E,oBAGA,eAACE,EAAA,EAAD,WACE,cAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,UAAUC,GAAG,iBAAtC,oBAGA,eAACH,EAAA,EAASI,KAAV,CAAeR,UAAW,YAAcD,EAAxC,UACE,cAACK,EAAA,EAASK,KAAV,UAAe,cAAC,IAAD,CAASR,GAAI,SAAUC,gBAAiB,MAAOF,UAAW,mBAAqBD,EAA/E,qBACf,cAACK,EAAA,EAASK,KAAV,UAAe,cAAC,IAAD,CAASR,GAAI,SAAUC,gBAAiB,MAAOF,UAAW,mBAAqBD,EAA/E,qBACf,cAACK,EAAA,EAASK,KAAV,UAAe,cAAC,IAAD,CAASR,GAAI,SAAUC,gBAAiB,MAAOF,UAAW,mBAAqBD,EAA/E,qBACf,cAACK,EAAA,EAASK,KAAV,UAAe,cAAC,IAAD,CAASR,GAAI,SAAUC,gBAAiB,MAAOF,UAAW,mBAAqBD,EAA/E,qBACf,cAACK,EAAA,EAASM,QAAV,IACA,cAACN,EAAA,EAASK,KAAV,UAAe,sBAAMT,UAAW,iBAAkBG,QAAS,kBAAML,EAAY,WAA9D,4BACf,cAACM,EAAA,EAASK,KAAV,UAAe,sBAAMT,UAAW,gBAAiBG,QAAS,kBAAML,EAAY,UAA7D,2BACf,cAACM,EAAA,EAASK,KAAV,UAAe,sBAAMT,UAAW,eAAgBG,QAAS,kBAAML,EAAY,SAA5D,uC,MCrCRa,MAPjB,WAA2B,IACfZ,EAAUF,qBAAWH,GAArBK,MACR,OACI,sBAAMC,UAAW,QAAUD,K,QCSpBa,MAZf,YAAkC,IAAXC,EAAU,EAAVA,SAAU,EACHC,mBAAS,QADN,mBACtBf,EADsB,KACfgB,EADe,KAK7B,OACI,cAAC,EAAcC,SAAf,CAAwBC,MAAO,CAAClB,QAAOgB,WAAUjB,YAJjC,SAACoB,GACjBH,EAASG,KAGT,SACKL,KCcEM,MAlBf,WACE,OACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,OAAK,EACLC,KAAK,IACLC,UAAW,kBAAM,cAAC,EAAD,eCLdC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3628af92.chunk.js","sourcesContent":["import {createContext} from 'react'\n\nconst GlobalContext = createContext()\n\nexport default GlobalContext","import React, { useContext } from \"react\";\nimport \"./NavBar.css\";\nimport { NavLink } from \"react-router-dom\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport GlobalContext from \"../../context/GlobalContext\";\n\n\nconst NavBar = () => {\n  const { handleTheme, theme } = useContext(GlobalContext);\n  \n  return (\n    <header>\n      <div className={\"NavBar NavBar-\" + theme + \" mobileOff\"}>\n        <NavLink to={\"/\"} className={\"NavLink NavLink-\" + theme} activeClassName={\"off\"}>\n          Inicio\n        </NavLink>\n        <NavLink to={\"/link1\"} activeClassName={\"off\"} className={\"NavLink NavLink-\" + theme}>\n          Link1\n        </NavLink>\n        <NavLink to={\"/link2\"} activeClassName={\"off\"} className={\"NavLink NavLink-\" + theme}>\n          Link2\n        </NavLink>\n        <NavLink to={\"/link3\"} activeClassName={\"off\"} className={\"NavLink NavLink-\" + theme}>\n          Link3\n        </NavLink>\n        <NavLink to={\"/link4\"} activeClassName={\"off\"} className={\"NavLink NavLink-\" + theme}>\n          Link4\n        </NavLink>\n        <span className={\"NavLink-Purple\"} onClick={() => handleTheme(\"Purple\")}>Purple theme</span>\n        <span className={\"NavLink-Light\"} onClick={() => handleTheme(\"Light\")}>Light theme</span>\n        <span className={\"NavLink-Dark\"} onClick={() => handleTheme(\"Dark\")}>Dark theme</span>\n      </div>\n      <header className={\"NavBar NavBar-\" + theme + \" mobileOn\"}>\n      <NavLink to={\"/\"} className={\"NavLink NavLink-\" + theme} activeClassName={\"off\"}>\n          Inicio\n        </NavLink>\n      <Dropdown>\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n          ä¸‰\n        </Dropdown.Toggle>\n        <Dropdown.Menu className={\"DropDown-\" + theme}>\n          <Dropdown.Item><NavLink to={\"/link1\"} activeClassName={\"off\"} className={\"NavLink NavLink-\" + theme}>Link1</NavLink></Dropdown.Item>\n          <Dropdown.Item><NavLink to={\"/link2\"} activeClassName={\"off\"} className={\"NavLink NavLink-\" + theme}>Link2</NavLink></Dropdown.Item>\n          <Dropdown.Item><NavLink to={\"/link3\"} activeClassName={\"off\"} className={\"NavLink NavLink-\" + theme}>Link3</NavLink></Dropdown.Item>\n          <Dropdown.Item><NavLink to={\"/link4\"} activeClassName={\"off\"} className={\"NavLink NavLink-\" + theme}>Link4</NavLink></Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item><span className={\"NavLink-Purple\"} onClick={() => handleTheme(\"Purple\")}>Purple theme</span></Dropdown.Item>\n          <Dropdown.Item><span className={\"NavLink-Light\"} onClick={() => handleTheme(\"Light\")}>Light theme</span></Dropdown.Item>\n          <Dropdown.Item><span className={\"NavLink-Dark\"} onClick={() => handleTheme(\"Dark\")}>Dark theme</span></Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n      </header>\n    </header>\n  );\n};\n\nexport default NavBar;\n","import { useContext } from \"react\";\nimport \"./IndexContainer.css\"\nimport GlobalContext from \"../../context/GlobalContext\";\n\nfunction IndexContainer() {\n    const { theme } = useContext(GlobalContext);\n    return (\n        <main className={\"Main-\" + theme}></main>\n    );\n  }\n  \n  export default IndexContainer;","import { useState } from \"react\";\nimport GlobalContext from \"./GlobalContext\";\n\n\nfunction ThemeContext({children}){\n    const [theme, setTheme] = useState(\"Dark\")\n    const handleTheme = (props) => {\n        setTheme(props);\n    }\n    return(\n        <GlobalContext.Provider value={{theme, setTheme, handleTheme}}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}\n\nexport default ThemeContext","import './App.css';\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport IndexContainer from \"./containers/IndexContainer/IndexContainer\";\nimport ThemeContext from \"./context/ThemeContext\"\n\nfunction App() {\n  return (\n    <ThemeContext>\n      <BrowserRouter>\n        <NavBar />\n        <IndexContainer />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={() => <IndexContainer />}\n          />\n        </Switch>\n      </BrowserRouter>\n    </ThemeContext>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}